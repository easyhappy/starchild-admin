# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: internal/degen/server.proto

require 'google/protobuf'


require 'google/protobuf/timestamp_pb'
require 'internal/ext/address_pb'
require 'internal/decimal/decimal_pb'
require 'internal/types/degen_pb'
require 'internal/types/degen_asset_pb'
require 'internal/types/degen_position_pb'
require 'internal/types/error_code_pb'
require 'google/protobuf/empty_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("internal/degen/server.proto", :syntax => :proto3) do
    add_message "GetAccountAssetRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "GetAccountAssetResponse" do
      optional :AccountAsset, :message, 1, "DegenAccountAsset"
    end
    add_message "GetAccountAssetsRequest" do
      repeated :Accounts, :message, 1, "AddressMessage"
    end
    add_message "GetAccountAssetsResponse" do
      repeated :AccountAssets, :message, 1, "DegenAccountAsset"
    end
    add_message "GetAccountAssetWithPositionMarginRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "GetAccountAssetWithPositionMarginResponse" do
      optional :AccountAssetWithPositionMargin, :message, 1, "DegenAccountAssetWithPositionMargin"
    end
    add_message "GetAccountAssetsWithPositionMarginRequest" do
      repeated :Accounts, :message, 1, "AddressMessage"
    end
    add_message "GetAccountAssetsWithPositionMarginResponse" do
      repeated :AccountAssetWithPositionMargin, :message, 1, "DegenAccountAssetWithPositionMargin"
    end
    add_message "GetAccountStateRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "GetAccountStateResponse" do
      optional :AccountState, :message, 1, "DegenAccountState"
    end
    add_message "GetAccountStatesRequest" do
      repeated :Accounts, :message, 1, "AddressMessage"
    end
    add_message "GetAccountStatesResponse" do
      repeated :AccountStates, :message, 1, "DegenAccountState"
    end
    add_message "GetAccountPositionRequest" do
      optional :Account, :message, 1, "AddressMessage"
      optional :MarketID, :string, 2
      optional :PositionID, :int64, 3
    end
    add_message "GetAccountPositionResponse" do
      optional :Position, :message, 1, "DegenPosition"
    end
    add_message "GetAccountPositionsRequest" do
      optional :Account, :message, 1, "AddressMessage"
      optional :MarketID, :string, 2
    end
    add_message "GetAccountPositionsResponse" do
      repeated :Positions, :message, 1, "DegenPosition"
    end
    add_message "GetSystemAccountInfoRequest" do
    end
    add_message "GetSystemAccountInfoResponse" do
      optional :UserTradingFee, :message, 1, "DecimalMessage"
      optional :JoJoTradingFee, :message, 2, "DecimalMessage"
      optional :UserLiquidationFee, :message, 3, "DecimalMessage"
      optional :JoJoLiquidationFee, :message, 4, "DecimalMessage"
      optional :UserCounterpartyAccountPNL, :message, 5, "DecimalMessage"
      optional :JoJoCounterpartyAccountPNL, :message, 6, "DecimalMessage"
      optional :LotteryPrizePool, :message, 7, "DecimalMessage"
      optional :BeginOfDay, :int64, 8
      optional :UserPNLPerDay, :message, 9, "DecimalMessage"
      optional :BeginOfHour, :int64, 10
      optional :UserPNLPerHour, :message, 11, "DecimalMessage"
      optional :TotalUserCounterpartyAccountPNL, :message, 12, "DecimalMessage"
      optional :TotalJoJoCounterpartyAccountPNL, :message, 13, "DecimalMessage"
      optional :SenderAccountCreditAmount, :message, 14, "DecimalMessage"
      optional :SenderAccountPendingCreditAmount, :message, 15, "DecimalMessage"
      optional :LongPositionMargin, :message, 16, "DecimalMessage"
      optional :ShortPositionMargin, :message, 17, "DecimalMessage"
      optional :UserProfitPerDay, :message, 18, "DecimalMessage"
      optional :UserProfitPerHour, :message, 19, "DecimalMessage"
    end
    add_message "UpdateAccountStateCacheRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "UpdateAccountStateCacheResponse" do
    end
    add_message "SenderAccountWithdrawRequest" do
      optional :Amount, :message, 1, "DecimalMessage"
    end
    add_message "GetAccountRiskLimitRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "GetAccountRiskLimitResponse" do
      optional :Account, :message, 1, "AddressMessage"
      optional :TakeProfitRatioLimit, :message, 2, "DecimalMessage"
      optional :PositionMarginLimit, :message, 3, "DecimalMessage"
    end
    add_message "DegenPendingWithdraw" do
      optional :WithdrawID, :int64, 1
      optional :WithdrawTime, :int64, 2
      optional :Account, :message, 3, "AddressMessage"
      optional :Amount, :message, 4, "DecimalMessage"
    end
    add_message "DegenFSMSnapshotData" do
      optional :IndexPriceOffset, :int64, 1
      optional :PersistLogIndex, :uint64, 2
      optional :UserTradingFee, :message, 3, "DecimalMessage"
      optional :JoJoTradingFee, :message, 4, "DecimalMessage"
      optional :UserLiquidationFee, :message, 5, "DecimalMessage"
      optional :JoJoLiquidationFee, :message, 6, "DecimalMessage"
      optional :UserCounterpartyAccountPNL, :message, 7, "DecimalMessage"
      optional :JoJoCounterpartyAccountPNL, :message, 8, "DecimalMessage"
      optional :LotteryPrizePool, :message, 9, "DecimalMessage"
      optional :BeginOfDay, :int64, 10
      optional :UserPNLPerDay, :message, 11, "DecimalMessage"
      repeated :DegenPendingWithdraws, :message, 12, "DegenPendingWithdraw"
      repeated :IndexPrices, :message, 13, "DegenIndexPrice"
      repeated :AccountAssets, :message, 14, "DegenAccountAsset"
      repeated :Positions, :message, 15, "DegenPosition"
      optional :BeginOfHour, :int64, 16
      optional :UserPNLPerHour, :message, 17, "DecimalMessage"
      optional :SuspendService, :bool, 18
      optional :PNLRiskPolicyTrigger, :bool, 19
      optional :UsersMaxPNLPerHour, :message, 20, "DecimalMessage"
      optional :UsersMaxPNLPerDay, :message, 21, "DecimalMessage"
      optional :AllUsersMaxPositionMargin, :message, 22, "DecimalMessage"
      optional :TotalUserCounterpartyAccountPNL, :message, 23, "DecimalMessage"
      optional :TotalJoJoCounterpartyAccountPNL, :message, 24, "DecimalMessage"
      optional :MaxPositionMarginDiff, :message, 25, "DecimalMessage"
      optional :UserProfitPerDay, :message, 26, "DecimalMessage"
      optional :UserProfitPerHour, :message, 27, "DecimalMessage"
      optional :UsersMaxProfitPerHour, :message, 28, "DecimalMessage"
      optional :UsersMaxProfitPerDay, :message, 29, "DecimalMessage"
    end
    add_message "DegenRiskPolicy" do
      optional :UsersMaxPNLPerHour, :message, 1, "DecimalMessage"
      optional :UsersMaxPNLPerDay, :message, 2, "DecimalMessage"
      optional :AllUsersMaxPositionMargin, :message, 3, "DecimalMessage"
      optional :MaxPositionMarginDiff, :message, 4, "DecimalMessage"
      optional :UsersMaxProfitPerHour, :message, 5, "DecimalMessage"
      optional :UsersMaxProfitPerDay, :message, 6, "DecimalMessage"
    end
    add_message "GetRiskPolicyResponse" do
      optional :DegenRiskPolicy, :message, 1, "DegenRiskPolicy"
    end
    add_message "GetSystemStatusResponse" do
      optional :SystemStatus, :message, 1, "DegenSystemStatus"
    end
    add_message "MarketPositionSize" do
      optional :MarketID, :string, 1
      optional :LongSize, :message, 2, "DecimalMessage"
      optional :ShortSize, :message, 3, "DecimalMessage"
    end
    add_message "GetPlatformMarketPositionSizeResponse" do
      repeated :MarketPositionSizes, :message, 1, "MarketPositionSize"
    end
    add_message "DRDepositLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :Amount, :message, 2, "DecimalMessage"
      optional :DepositID, :int64, 3
      optional :BlockchainLogID, :int64, 4
      optional :IsInternal, :bool, 5
    end
    add_message "DRDepositLogResponse" do
      optional :AccountAsset, :message, 1, "DegenAccountAsset"
      optional :DepositID, :int64, 2
      optional :Amount, :message, 3, "DecimalMessage"
      optional :BlockchainID, :int64, 4
      optional :IsInternal, :bool, 5
    end
    add_message "DRWithdrawLog" do
      optional :WithdrawID, :int64, 1
      optional :WithdrawTime, :int64, 2
      optional :Account, :message, 3, "AddressMessage"
      optional :Amount, :message, 4, "DecimalMessage"
      optional :IsInternal, :bool, 5
    end
    add_message "DRWithdrawLogResponse" do
      optional :WithdrawID, :int64, 1
      optional :Account, :message, 2, "AddressMessage"
      optional :Amount, :message, 3, "DecimalMessage"
      optional :IsInternal, :bool, 4
    end
    add_message "DRPendingWithdrawUpdateLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :WithdrawID, :int64, 2
      optional :Success, :bool, 3
      optional :BlockchainID, :int64, 4
      optional :IsInternal, :bool, 5
    end
    add_message "DRPendingWithdrawUpdateResponse" do
      optional :WithdrawID, :int64, 1
      optional :Account, :message, 2, "AddressMessage"
      optional :Amount, :message, 3, "DecimalMessage"
      optional :Success, :bool, 4
      optional :BlockchainID, :int64, 5
      optional :IsInternal, :bool, 6
    end
    add_message "DRIndexPriceLog" do
      optional :Offset, :int64, 1
      optional :DegenIndexPrices, :message, 2, "DegenIndexPrices"
    end
    add_message "DRIndexPriceLogResponse" do
      repeated :TakeProfitPositions, :message, 1, "DegenPosition"
      repeated :LiquidationPositions, :message, 2, "DegenPosition"
      optional :DegenIndexPrices, :message, 3, "DegenIndexPrices"
    end
    add_message "DROpenPositionLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :JoJoAccount, :bool, 2
      optional :MarketID, :string, 3
      optional :PositionID, :int64, 4
      optional :OpenPositionSide, :int32, 5
      optional :Leverage, :message, 6, "DecimalMessage"
      optional :TakeProfitRatio, :message, 7, "DecimalMessage"
      optional :InitialMargin, :message, 8, "DecimalMessage"
      optional :FeeRate, :message, 9, "DecimalMessage"
      optional :StepSize, :message, 10, "DecimalMessage"
      optional :LiquidationRate, :message, 11, "DecimalMessage"
      optional :PricePrecision, :int32, 12
      optional :OpenTradeID, :int64, 13
      optional :CloseTradeID, :int64, 14
      optional :IP, :string, 15
    end
    add_message "DROpenPositionLogResponse" do
      optional :Position, :message, 1, "DegenPosition"
    end
    add_message "DRClosePositionLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :MarketID, :string, 2
      optional :PositionID, :int64, 3
      optional :FeeRate, :message, 4, "DecimalMessage"
    end
    add_message "DRClosePositionLogResponse" do
      optional :Position, :message, 1, "DegenPosition"
    end
    add_message "DRClosePositionsLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :MarketID, :string, 2
      optional :FeeRate, :message, 3, "DecimalMessage"
    end
    add_message "DRClosePositionsLogResponse" do
      repeated :Positions, :message, 1, "DegenPosition"
    end
    add_message "DRInternalTransferToBotLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :Amount, :message, 2, "DecimalMessage"
      optional :TransferID, :int64, 3
    end
    add_message "DRInternalTransferToBotLogResponse" do
      optional :Account, :message, 1, "AddressMessage"
      optional :Amount, :message, 2, "DecimalMessage"
      optional :TransferID, :int64, 3
    end
    add_message "DRUpdatePersistLogIndexLog" do
      optional :PersistLogIndex, :uint64, 1
    end
    add_message "DRUpdatePersistLogIndexLogResponse" do
    end
    add_message "DRLuckyDrawClaimingPrizeLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :RecordID, :int64, 2
      optional :Amount, :message, 3, "DecimalMessage"
    end
    add_message "DRLuckyDrawClaimingPrizeLogResponse" do
      optional :Account, :message, 1, "AddressMessage"
      optional :RecordID, :int64, 2
      optional :Amount, :message, 3, "DecimalMessage"
      optional :Status, :int32, 4
    end
    add_message "DRLuckyDrawClaimingPrizesLog" do
      optional :Account, :message, 1, "AddressMessage"
      repeated :RecordIDs, :int64, 2
      repeated :Amounts, :message, 3, "DecimalMessage"
    end
    add_message "DRLuckyDrawClaimingPrizesLogResponse" do
      optional :Account, :message, 1, "AddressMessage"
      repeated :RecordIDs, :int64, 2
      repeated :Amounts, :message, 3, "DecimalMessage"
      optional :Status, :int32, 4
    end
    add_message "DRLuckyDrawSystemTransferLotteryBonusLog" do
      optional :EpochID, :int64, 1
      optional :TransferTradingFeeAmount, :message, 2, "DecimalMessage"
      optional :TransferLiquidationFeeAmount, :message, 3, "DecimalMessage"
      optional :TransferPNLAmount, :message, 4, "DecimalMessage"
    end
    add_message "DRLuckyDrawSystemTransferLotteryBonusLogResponse" do
      optional :EpochID, :int64, 1
      optional :TransferTradingFeeAmount, :message, 2, "DecimalMessage"
      optional :TransferLiquidationFeeAmount, :message, 3, "DecimalMessage"
      optional :TransferPNLAmount, :message, 4, "DecimalMessage"
    end
    add_message "DRUpdateRiskPolicyLog" do
      optional :UsersMaxPNLPerHour, :message, 1, "DecimalMessage"
      optional :UsersMaxPNLPerDay, :message, 2, "DecimalMessage"
      optional :AllUsersMaxPositionMargin, :message, 3, "DecimalMessage"
      optional :MaxPositionMarginDiff, :message, 4, "DecimalMessage"
      optional :UsersMaxProfitPerHour, :message, 5, "DecimalMessage"
      optional :UsersMaxProfitPerDay, :message, 6, "DecimalMessage"
    end
    add_message "DRUpdateRiskPolicyLogResponse" do
    end
    add_message "DRUpdateSystemStatusLog" do
      optional :SuspendService, :bool, 1
      optional :PNLRiskPolicyTrigger, :bool, 2
    end
    add_message "DRUpdateSystemStatusLogResponse" do
    end
    add_message "DRTransferToSenderAccountLog" do
      optional :TransferSource, :string, 1
      optional :TransferFee, :message, 2, "DecimalMessage"
      optional :TransferLiquidationFee, :message, 3, "DecimalMessage"
      optional :TransferCounterpartyAccountPNL, :message, 4, "DecimalMessage"
      optional :TransferPrizePool, :message, 5, "DecimalMessage"
    end
    add_message "DRTransferToSenderAccountLogResponse" do
      optional :TransferSource, :string, 1
      optional :SenderAccount, :message, 2, "AddressMessage"
      optional :TransferFee, :message, 3, "DecimalMessage"
      optional :TransferLiquidationFee, :message, 4, "DecimalMessage"
      optional :TransferCounterpartyAccountPNL, :message, 5, "DecimalMessage"
      optional :TransferPrizePool, :message, 6, "DecimalMessage"
    end
    add_message "DRReleaseAccountPendingCreditLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :Amount, :message, 2, "DecimalMessage"
    end
    add_message "DRReleaseAccountPendingCreditLogResponse" do
      optional :Account, :message, 1, "AddressMessage"
      optional :Amount, :message, 2, "DecimalMessage"
    end
    add_message "DRUpdateAggregatePositionLog" do
      optional :DegenAggregatePosition, :message, 1, "DegenAggregatePosition"
    end
    add_message "DRUpdateAggregatePositionLogResponse" do
    end
    add_message "DRPutPositionTakeProfitRatioLog" do
      optional :Account, :message, 1, "AddressMessage"
      optional :MarketID, :string, 2
      optional :PositionID, :int64, 3
      optional :TakeProfitRatio, :message, 4, "DecimalMessage"
    end
    add_message "DRPutPositionTakeProfitRatioLogResponse" do
      optional :Position, :message, 1, "DegenPosition"
    end
    add_message "DegenRaftLog" do
      oneof :Log do
        optional :DepositLog, :message, 1, "DRDepositLog"
        optional :WithdrawLog, :message, 2, "DRWithdrawLog"
        optional :PendingWithdrawUpdateLog, :message, 9, "DRPendingWithdrawUpdateLog"
        optional :OpenPositionLog, :message, 3, "DROpenPositionLog"
        optional :ClosePositionLog, :message, 4, "DRClosePositionLog"
        optional :IndexPriceLog, :message, 5, "DRIndexPriceLog"
        optional :UpdatePersistLogIndexLog, :message, 6, "DRUpdatePersistLogIndexLog"
        optional :LuckyDrawClaimingPrizeLog, :message, 8, "DRLuckyDrawClaimingPrizeLog"
        optional :LuckyDrawSystemTransferLotteryBonusLog, :message, 10, "DRLuckyDrawSystemTransferLotteryBonusLog"
        optional :UpdateRiskPolicyLog, :message, 11, "DRUpdateRiskPolicyLog"
        optional :UpdateSystemStatusLog, :message, 12, "DRUpdateSystemStatusLog"
        optional :TransferToSenderAccountLog, :message, 13, "DRTransferToSenderAccountLog"
        optional :ReleaseAccountPendingCreditLog, :message, 14, "DRReleaseAccountPendingCreditLog"
        optional :UpdateAggregatePositionLog, :message, 15, "DRUpdateAggregatePositionLog"
        optional :ClosePositionsLog, :message, 16, "DRClosePositionsLog"
        optional :InternalTransferToBotLog, :message, 17, "DRInternalTransferToBotLog"
        optional :LuckyDrawClaimingPrizesLog, :message, 18, "DRLuckyDrawClaimingPrizesLog"
        optional :PutPositionTakeProfitRatioLog, :message, 19, "DRPutPositionTakeProfitRatioLog"
      end
    end
    add_message "DegenRaftLogResponse" do
      optional :LogIndex, :uint64, 1
      optional :ErrorCode, :enum, 2, "ERROR_CODE"
      optional :ResponseTime, :message, 3, "google.protobuf.Timestamp"
      oneof :LogResponse do
        optional :DepositLogResponse, :message, 10, "DRDepositLogResponse"
        optional :WithdrawLogResponse, :message, 11, "DRWithdrawLogResponse"
        optional :PendingWithdrawUpdateResponse, :message, 18, "DRPendingWithdrawUpdateResponse"
        optional :OpenPositionLogResponse, :message, 12, "DROpenPositionLogResponse"
        optional :ClosePositionLogResponse, :message, 13, "DRClosePositionLogResponse"
        optional :IndexPriceLogResponse, :message, 14, "DRIndexPriceLogResponse"
        optional :UpdatePersistLogIndexLogResponse, :message, 15, "DRUpdatePersistLogIndexLogResponse"
        optional :LuckyDrawClaimingPrizeLogResponse, :message, 17, "DRLuckyDrawClaimingPrizeLogResponse"
        optional :LuckyDrawSystemTransferLotteryBonusLogResponse, :message, 19, "DRLuckyDrawSystemTransferLotteryBonusLogResponse"
        optional :UpdateRiskPolicyLogResponse, :message, 20, "DRUpdateRiskPolicyLogResponse"
        optional :UpdateSystemStatusLogResponse, :message, 21, "DRUpdateSystemStatusLogResponse"
        optional :TransferToSenderAccountLogResponse, :message, 22, "DRTransferToSenderAccountLogResponse"
        optional :ReleaseAccountPendingCreditLogResponse, :message, 23, "DRReleaseAccountPendingCreditLogResponse"
        optional :UpdateAggregatePositionLogResponse, :message, 24, "DRUpdateAggregatePositionLogResponse"
        optional :ClosePositionsLogResponse, :message, 25, "DRClosePositionsLogResponse"
        optional :InternalTransferToBotLogResponse, :message, 26, "DRInternalTransferToBotLogResponse"
        optional :LuckyDrawClaimingPrizesLogResponse, :message, 27, "DRLuckyDrawClaimingPrizesLogResponse"
        optional :PutPositionTakeProfitRatioLogResponse, :message, 28, "DRPutPositionTakeProfitRatioLogResponse"
      end
    end
    add_message "BatchDegenRaftLog" do
      repeated :DegenRaftLogs, :message, 1, "DegenRaftLog"
    end
    add_message "BatchDegenRaftLogResponse" do
      repeated :DegenRaftLogResponses, :message, 1, "DegenRaftLogResponse"
    end
  end
end

module Internal
  module Degen
    GetAccountAssetRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetRequest").msgclass
    GetAccountAssetResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetResponse").msgclass
    GetAccountAssetsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetsRequest").msgclass
    GetAccountAssetsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetsResponse").msgclass
    GetAccountAssetWithPositionMarginRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetWithPositionMarginRequest").msgclass
    GetAccountAssetWithPositionMarginResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetWithPositionMarginResponse").msgclass
    GetAccountAssetsWithPositionMarginRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetsWithPositionMarginRequest").msgclass
    GetAccountAssetsWithPositionMarginResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountAssetsWithPositionMarginResponse").msgclass
    GetAccountStateRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountStateRequest").msgclass
    GetAccountStateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountStateResponse").msgclass
    GetAccountStatesRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountStatesRequest").msgclass
    GetAccountStatesResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountStatesResponse").msgclass
    GetAccountPositionRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountPositionRequest").msgclass
    GetAccountPositionResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountPositionResponse").msgclass
    GetAccountPositionsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountPositionsRequest").msgclass
    GetAccountPositionsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountPositionsResponse").msgclass
    GetSystemAccountInfoRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetSystemAccountInfoRequest").msgclass
    GetSystemAccountInfoResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetSystemAccountInfoResponse").msgclass
    UpdateAccountStateCacheRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("UpdateAccountStateCacheRequest").msgclass
    UpdateAccountStateCacheResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("UpdateAccountStateCacheResponse").msgclass
    SenderAccountWithdrawRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("SenderAccountWithdrawRequest").msgclass
    GetAccountRiskLimitRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountRiskLimitRequest").msgclass
    GetAccountRiskLimitResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountRiskLimitResponse").msgclass
    DegenPendingWithdraw = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DegenPendingWithdraw").msgclass
    DegenFSMSnapshotData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DegenFSMSnapshotData").msgclass
    DegenRiskPolicy = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DegenRiskPolicy").msgclass
    GetRiskPolicyResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetRiskPolicyResponse").msgclass
    GetSystemStatusResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetSystemStatusResponse").msgclass
    MarketPositionSize = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("MarketPositionSize").msgclass
    GetPlatformMarketPositionSizeResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetPlatformMarketPositionSizeResponse").msgclass
    DRDepositLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRDepositLog").msgclass
    DRDepositLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRDepositLogResponse").msgclass
    DRWithdrawLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRWithdrawLog").msgclass
    DRWithdrawLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRWithdrawLogResponse").msgclass
    DRPendingWithdrawUpdateLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRPendingWithdrawUpdateLog").msgclass
    DRPendingWithdrawUpdateResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRPendingWithdrawUpdateResponse").msgclass
    DRIndexPriceLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRIndexPriceLog").msgclass
    DRIndexPriceLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRIndexPriceLogResponse").msgclass
    DROpenPositionLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DROpenPositionLog").msgclass
    DROpenPositionLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DROpenPositionLogResponse").msgclass
    DRClosePositionLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRClosePositionLog").msgclass
    DRClosePositionLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRClosePositionLogResponse").msgclass
    DRClosePositionsLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRClosePositionsLog").msgclass
    DRClosePositionsLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRClosePositionsLogResponse").msgclass
    DRInternalTransferToBotLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRInternalTransferToBotLog").msgclass
    DRInternalTransferToBotLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRInternalTransferToBotLogResponse").msgclass
    DRUpdatePersistLogIndexLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdatePersistLogIndexLog").msgclass
    DRUpdatePersistLogIndexLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdatePersistLogIndexLogResponse").msgclass
    DRLuckyDrawClaimingPrizeLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawClaimingPrizeLog").msgclass
    DRLuckyDrawClaimingPrizeLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawClaimingPrizeLogResponse").msgclass
    DRLuckyDrawClaimingPrizesLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawClaimingPrizesLog").msgclass
    DRLuckyDrawClaimingPrizesLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawClaimingPrizesLogResponse").msgclass
    DRLuckyDrawSystemTransferLotteryBonusLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawSystemTransferLotteryBonusLog").msgclass
    DRLuckyDrawSystemTransferLotteryBonusLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRLuckyDrawSystemTransferLotteryBonusLogResponse").msgclass
    DRUpdateRiskPolicyLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateRiskPolicyLog").msgclass
    DRUpdateRiskPolicyLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateRiskPolicyLogResponse").msgclass
    DRUpdateSystemStatusLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateSystemStatusLog").msgclass
    DRUpdateSystemStatusLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateSystemStatusLogResponse").msgclass
    DRTransferToSenderAccountLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRTransferToSenderAccountLog").msgclass
    DRTransferToSenderAccountLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRTransferToSenderAccountLogResponse").msgclass
    DRReleaseAccountPendingCreditLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRReleaseAccountPendingCreditLog").msgclass
    DRReleaseAccountPendingCreditLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRReleaseAccountPendingCreditLogResponse").msgclass
    DRUpdateAggregatePositionLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateAggregatePositionLog").msgclass
    DRUpdateAggregatePositionLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRUpdateAggregatePositionLogResponse").msgclass
    DRPutPositionTakeProfitRatioLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRPutPositionTakeProfitRatioLog").msgclass
    DRPutPositionTakeProfitRatioLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DRPutPositionTakeProfitRatioLogResponse").msgclass
    DegenRaftLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DegenRaftLog").msgclass
    DegenRaftLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("DegenRaftLogResponse").msgclass
    BatchDegenRaftLog = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("BatchDegenRaftLog").msgclass
    BatchDegenRaftLogResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("BatchDegenRaftLogResponse").msgclass
  end
end
