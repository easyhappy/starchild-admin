# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: internal/arb_activity_processor/server.proto

require 'google/protobuf'


require 'internal/ext/address_pb'
require 'google/protobuf/empty_pb'
require 'internal/decimal/decimal_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("internal/arb_activity_processor/server.proto", :syntax => :proto3) do
    add_message "GetAccountRewardPointsRequest" do
      optional :Account, :message, 1, "AddressMessage"
    end
    add_message "TradeCheckInData" do
      optional :TotalArbAmount, :message, 1, "DecimalMessage"
      optional :RemainingArbAmount, :message, 2, "DecimalMessage"
      optional :MyRewardAmount, :message, 3, "DecimalMessage"
      optional :DailyTradeCountPoints, :message, 4, "DecimalMessage"
      optional :DailyTradeAmountPoints, :message, 5, "DecimalMessage"
      optional :StartAt, :int64, 6
      optional :EndAt, :int64, 7
    end
    add_message "MarketTradeMining" do
      optional :MarketID, :string, 1
      optional :MarketEpochRewardAmount, :message, 2, "DecimalMessage"
      optional :MyTradeAmount, :message, 3, "DecimalMessage"
      optional :MyRank, :int64, 4
      optional :MyEstimatedRewardPoints, :int64, 5
      optional :MarketTotalTradeAmount, :message, 6, "DecimalMessage"
    end
    add_message "EpochRewardAmount" do
      optional :EpochNumber, :int64, 1
      optional :EpochRewardAmount, :message, 2, "DecimalMessage"
    end
    add_message "TradeMiningData" do
      optional :TotalArbAmount, :message, 1, "DecimalMessage"
      optional :EpochNumber, :int64, 2
      optional :StartAt, :int64, 3
      optional :EndAt, :int64, 4
      optional :EpochTotalArbAmount, :message, 5, "DecimalMessage"
      optional :MyRewardAmount, :message, 6, "DecimalMessage"
      repeated :MarketTradeMinings, :message, 7, "MarketTradeMining"
      repeated :EpochRewardAmounts, :message, 8, "EpochRewardAmount"
    end
    add_message "TradeFeeData" do
      optional :TotalArbAmount, :message, 1, "DecimalMessage"
      optional :EpochNumber, :int64, 2
      optional :StartAt, :int64, 3
      optional :EndAt, :int64, 4
      optional :EpochTotalArbAmount, :message, 5, "DecimalMessage"
      optional :MyRewardAmount, :message, 6, "DecimalMessage"
      optional :MyTradeFee, :message, 7, "DecimalMessage"
      repeated :EpochRewardAmounts, :message, 8, "EpochRewardAmount"
    end
    add_message "NoviceActivityData" do
      optional :TotalArbAmount, :message, 1, "DecimalMessage"
      optional :StartAt, :int64, 2
      optional :EndAt, :int64, 3
      optional :MyRewardAmount, :message, 4, "DecimalMessage"
      optional :MyActivityPoints, :message, 5, "DecimalMessage"
      optional :MyRank, :int64, 6
      optional :ActivityPointsAtRank50, :message, 7, "DecimalMessage"
      optional :Account, :message, 8, "AddressMessage"
    end
    add_message "GetAccountRewardPointsResponse" do
      optional :TradeCheckIn, :message, 1, "TradeCheckInData"
      optional :TradeMining, :message, 2, "TradeMiningData"
      optional :TradeFee, :message, 3, "TradeFeeData"
      optional :NoviceActivity, :message, 4, "NoviceActivityData"
      optional :MyTotalRewardAmount, :message, 5, "DecimalMessage"
      optional :MerkleIndex, :int64, 6
      repeated :MerkleProof, :string, 7
      optional :IsClaimed, :bool, 8
    end
    add_message "GetArbActivityBriefResponse" do
      optional :TradeCheckIn, :message, 1, "TradeCheckInData"
      optional :TradeMining, :message, 2, "TradeMiningData"
      optional :TradeFee, :message, 3, "TradeFeeData"
      optional :NoviceActivity, :message, 4, "NoviceActivityData"
    end
    add_message "GetTradeMiningRankingListRequest" do
      optional :MarketID, :string, 1
    end
    add_message "TradeMiningRankMember" do
      optional :Account, :message, 1, "AddressMessage"
      optional :TradeAmount, :message, 2, "DecimalMessage"
    end
    add_message "GetTradeMiningRankingListResponse" do
      repeated :TradeMiningRankMembers, :message, 1, "TradeMiningRankMember"
    end
    add_message "GetNoviceActivityRankingListResponse" do
      repeated :NoviceActivities, :message, 4, "NoviceActivityData"
    end
  end
end

module Internal
  module ArbActivityProcessor
    GetAccountRewardPointsRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountRewardPointsRequest").msgclass
    TradeCheckInData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("TradeCheckInData").msgclass
    MarketTradeMining = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("MarketTradeMining").msgclass
    EpochRewardAmount = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("EpochRewardAmount").msgclass
    TradeMiningData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("TradeMiningData").msgclass
    TradeFeeData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("TradeFeeData").msgclass
    NoviceActivityData = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("NoviceActivityData").msgclass
    GetAccountRewardPointsResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetAccountRewardPointsResponse").msgclass
    GetArbActivityBriefResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetArbActivityBriefResponse").msgclass
    GetTradeMiningRankingListRequest = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetTradeMiningRankingListRequest").msgclass
    TradeMiningRankMember = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("TradeMiningRankMember").msgclass
    GetTradeMiningRankingListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetTradeMiningRankingListResponse").msgclass
    GetNoviceActivityRankingListResponse = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("GetNoviceActivityRankingListResponse").msgclass
  end
end
