# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: internal/types/price_alert_rule.proto

require 'google/protobuf'


require 'google/protobuf/timestamp_pb'
require 'internal/decimal/decimal_pb'
require 'internal/ext/address_pb'

Google::Protobuf::DescriptorPool.generated_pool.build do
  add_file("internal/types/price_alert_rule.proto", :syntax => :proto3) do
    add_message "PriceAlertRule" do
      optional :ID, :int64, 1
      optional :Account, :message, 2, "AddressMessage"
      optional :MarketID, :string, 3
      optional :Price, :message, 4, "DecimalMessage"
      optional :AlertType, :enum, 5, "ALERT_TYPE"
      optional :PercentChange, :message, 6, "DecimalMessage"
      optional :TimeRange, :int64, 7
      optional :AlertFrequency, :enum, 8, "ALERT_FREQUENCY"
      optional :AlertStatus, :enum, 9, "ALERT_STATUS"
      optional :EmailNotifyCount, :int64, 10
      optional :LastNotifyAt, :message, 18, "google.protobuf.Timestamp"
      optional :ExpiredAt, :message, 19, "google.protobuf.Timestamp"
      optional :CreatedAt, :message, 20, "google.protobuf.Timestamp"
      optional :UpdatedAt, :message, 21, "google.protobuf.Timestamp"
    end
    add_enum "ALERT_TYPE" do
      value :CROSSING_UP, 0
      value :CROSSING_DOWN, 1
      value :MOVING_UP, 2
      value :MOVING_DOWN, 3
    end
    add_enum "ALERT_FREQUENCY" do
      value :ONCE, 0
      value :EVERY_TIME, 1
    end
    add_enum "ALERT_STATUS" do
      value :ACTIVE, 0
      value :EXPIRED, 1
      value :CANCELED, 2
      value :EXITED, 3
      value :NOTIFIED, 4
    end
  end
end

module Internal
  module Types
    PriceAlertRule = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("PriceAlertRule").msgclass
    ALERT_TYPE = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ALERT_TYPE").enummodule
    ALERT_FREQUENCY = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ALERT_FREQUENCY").enummodule
    ALERT_STATUS = ::Google::Protobuf::DescriptorPool.generated_pool.lookup("ALERT_STATUS").enummodule
  end
end
