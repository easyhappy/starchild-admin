# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: internal/sender/server.proto for package 'Internal.Sender'

require 'grpc'
require 'internal/sender/server_pb'

module Internal
  module Sender
    module SenderService
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'SenderService'

        rpc :Create, ::Internal::Sender::CreateSenderLogRequest, ::Internal::Types::SenderLog
        rpc :CreateAsync, ::Internal::Sender::CreateSenderLogRequest, ::Internal::Types::SenderLog
        rpc :Get, ::Internal::Sender::GetRequest, ::Internal::Sender::GetResponse
        rpc :GetPendingSenderLogGasInfo, ::Internal::Sender::GetPendingSenderLogGasInfoRequest, ::Internal::Sender::GetPendingSenderLogGasInfoResponse
        rpc :RetryPendingSenderLogWithGasInfo, ::Internal::Sender::RetryPendingSenderLogRequest, ::Internal::Sender::RetryPendingSenderLogResponse
        # will push every changed sender log info to the subscriber
        rpc :Subscribe, ::Internal::Sender::SubscribeMessage, stream(::Internal::Sender::SubscribeResponse)
      end

      Stub = Service.rpc_stub_class
    end
  end
end
